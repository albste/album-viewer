{"version":3,"sources":["components/constants.js","components/content.js","App.js","reportWebVitals.js","index.js"],"names":["Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","height","breakpoints","up","spacing","SearchIconWrapper","padding","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","Accordion","props","disableGutters","elevation","square","border","divider","borderBottom","AccordionSummary","expandIcon","sx","fontSize","mode","flexDirection","transform","AccordionDetails","MuiAccordionDetails","borderTop","Content","useState","albums","setAlbums","users","setUsers","searchText","setSearchText","React","selectedUser","setSelectedUser","useEffect","axios","method","url","then","response","data","message","catch","error","console","log","className","Grid","container","item","xs","Box","my","bgcolor","value","onChange","event","target","placeholder","inputProps","FormControl","fullWidth","InputLabel","id","Select","labelId","label","get","params","userid","map","user","MenuItem","album","toString","includes","title","TransitionProps","unmountOnExit","Chip","avatar","Avatar","variant","userId","edge","ImageList","cols","rowHeight","photos","photo","Tooltip","ImageListItem","src","thumbnailUrl","srcSet","alt","loading","ImageListItemBar","subtitle","HideOnScroll","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","App","CssBaseline","AppBar","Toolbar","md","mr","Typography","component","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.fa84ebd6.chunk.js","sourcesContent":["import { styled, alpha } from '@mui/material/styles';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\nimport MuiAccordion from '@mui/material/Accordion';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    height: '53.5px',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100px',\r\n        height: '37px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '500ch',\r\n            '&:focus': {\r\n                width: '70ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport const Accordion = styled((props) => (\r\n    <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nexport const AccordionSummary = styled((props) => (\r\n    <MuiAccordionSummary\r\n        expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    backgroundColor:\r\n        theme.palette.mode === 'dark'\r\n            ? 'rgba(255, 255, 255, .05)'\r\n            : 'rgba(0, 0, 0, .03)',\r\n    flexDirection: 'row-reverse',\r\n    '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    '& .MuiAccordionSummary-content': {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport const AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n","import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from 'react';\r\nimport * as Costants from './constants.js';\r\nimport Grid from '@mui/material/Grid';\r\nimport axios from \"axios\";\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Chip from '@mui/material/Chip';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\n\r\nexport default function Content() {\r\n\r\n    //State vars\r\n    const [albums, setAlbums] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [selectedUser, setSelectedUser] = React.useState('');\r\n\r\n\r\n    //Handle Changes\r\n    const handleChangeSearchText = (event) => {\r\n        setSearchText(event.target.value);\r\n    };\r\n\r\n    const handleChangeSelectedUser = (event) => {\r\n        setSelectedUser(event.target.value);\r\n        axios\r\n            // .get('/albumsfiltered', { params: { userid: event.target.value } }) //FOR HEROKU PUBLISH ONLY\r\n            .get('http://localhost:3001/albumsfiltered', { params: { userid: event.target.value } })\r\n            .then(function (response) { setAlbums(response.data.message); })\r\n            .catch(function (error) { console.log(error); });;\r\n    };\r\n\r\n\r\n    //Runs once\r\n    useEffect(() => {\r\n\r\n        var configGetAlbums = {\r\n            method: 'get',\r\n            // url: '/albums'  //FOR HEROKU PUBLISH ONLY\r\n            url: 'http://localhost:3001/albums'\r\n        };\r\n\r\n        var configGetUsers = {\r\n            method: 'get',\r\n            // url: '/users'  //FOR HEROKU PUBLISH ONLY\r\n            url: 'http://localhost:3001/users'\r\n        };\r\n\r\n        axios(configGetAlbums)\r\n            .then(function (response) { setAlbums(response.data.message); })\r\n            .catch(function (error) { console.log(error); });\r\n\r\n        axios(configGetUsers)\r\n            .then(function (response) { setUsers(response.data.message); })\r\n            .catch(function (error) { console.log(error); });\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"contentContainer\">\r\n\r\n            {/* Search bar and select user controls */}\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={9.5}>\r\n                    <Box sx={{\r\n                        my: 1, display: 'flex', alignItems: 'center', width: '100%',\r\n                        border: (theme) => `1px solid rgba(0, 0, 0, 0.3)`,\r\n                        borderRadius: 1, bgcolor: 'background.paper'\r\n                    }} >\r\n                        <Costants.Search >\r\n                            <Costants.SearchIconWrapper>\r\n                                <SearchIcon />\r\n                            </Costants.SearchIconWrapper>\r\n                            <Costants.StyledInputBase\r\n                                value={searchText}\r\n                                onChange={handleChangeSearchText}\r\n                                placeholder=\"Search album\" position=\"right\"\r\n                                inputProps={{ 'aria-label': 'search' }} />\r\n                        </Costants.Search>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={2.5} >\r\n                    <Box sx={{\r\n                        my: 1, display: 'flex', alignItems: 'center', width: '100%',\r\n                        borderRadius: 1, bgcolor: 'background.paper'\r\n                    }} >\r\n                        <FormControl fullWidth >\r\n                            <InputLabel id=\"user-to-show-label\">User to show</InputLabel>\r\n                            <Select\r\n                                labelId=\"user-to-show-label\"\r\n                                id=\"user-to-show\"\r\n                                value={selectedUser}\r\n                                label=\"User to show\"\r\n                                onChange={handleChangeSelectedUser}>\r\n                                {users.map((user) => (\r\n                                    <MenuItem\r\n                                        key={user}\r\n                                        value={user} >\r\n                                        {user}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/* Album accordion list */}\r\n            {albums.map(album => {\r\n                if (searchText === \"\" || album.id.toString().includes(searchText) || album.title.toString().includes(searchText))\r\n                    return (\r\n                        <Costants.Accordion TransitionProps={{ unmountOnExit: true }} >\r\n\r\n                            <Costants.AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={10.5}>\r\n                                        <Chip avatar={<Avatar>{album.id}</Avatar>} label={album.title} color=\"primary\" variant=\"outlined\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={1.5}>\r\n                                        <Chip avatar={<Avatar>{album.userId}</Avatar>} edge=\"end\" label=\"USER ID\" color=\"secondary\" variant=\"outlined\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Costants.AccordionSummary>\r\n\r\n                            {/* Photo list */}\r\n                            <Costants.AccordionDetails>\r\n                                <ImageList sx={{ width: '100%' }} cols={6} rowHeight={180}>\r\n                                    {album.photos.map(photo => {\r\n                                        return (\r\n                                            <div className=\"card\">\r\n                                                <Tooltip title={photo.title}>\r\n                                                    <ImageListItem key={photo.url} >\r\n                                                        <img\r\n                                                            src={`${photo.thumbnailUrl}?w=150&h=150`}\r\n                                                            srcSet={`${photo.thumbnailUrl}?w=150&h=150`}\r\n                                                            alt={photo.title}\r\n                                                            loading=\"eager\"\r\n                                                        />\r\n                                                        <ImageListItemBar\r\n                                                            title={photo.id}\r\n                                                            subtitle={photo.title}\r\n                                                        />\r\n                                                    </ImageListItem>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </ImageList>\r\n                            </Costants.AccordionDetails>\r\n                        </Costants.Accordion>\r\n                    );\r\n            })}\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Slide from '@mui/material/Slide';\nimport Content from './components/content';\nimport PhotoLibraryIcon from '@mui/icons-material/PhotoLibrary';\n\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n \nfunction App() {\n\n  return (\n        <React.Fragment>\n            <CssBaseline />\n            <HideOnScroll>\n                <AppBar>\n                    <Toolbar>\n                      <PhotoLibraryIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n                      <Typography variant=\"h6\" component=\"div\"> Albums </Typography>\n                    </Toolbar>\n                </AppBar>\n            </HideOnScroll>\n            <Toolbar />\n            <Container>                \n                <Box sx={{ my: 2 }}>\n                    <Content/>\n                </Box>\n            </Container>\n        </React.Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}